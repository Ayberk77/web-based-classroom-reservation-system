@page
@using Microsoft.AspNetCore.Authorization
@model AdminReservationsModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "Reservations";
    var selectedStatus = Request.Query["status"].ToString();
    var filtered = string.IsNullOrEmpty(selectedStatus) || selectedStatus == "All"
        ? Model.Reservations
        : Model.Reservations.Where(r => r.Status == selectedStatus);
    var antiforgeryToken = Antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}
@attribute [Authorize(Roles = "Admin")]

<h1 class="mt-4 mb-4"><i class="bi bi-journal-check me-2"></i>Reservations</h1>

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
<input type="hidden" id="__RequestVerificationToken" value="@antiforgeryToken" />

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <form method="get" class="row g-3 align-items-center">
            <div class="col-auto">
                <label for="status" class="col-form-label fw-semibold">Filter by Status:</label>
            </div>
            <div class="col-auto">
                <select id="status" name="status" class="form-select" onchange="this.form.submit()">
                    <option value="All" selected="@(selectedStatus == "All")">All</option>
                    <option value="Pending" selected="@(selectedStatus == "Pending")">Pending</option>
                    <option value="Approved" selected="@(selectedStatus == "Approved")">Approved</option>
                    <option value="Rejected" selected="@(selectedStatus == "Rejected")">Rejected</option>
                </select>
            </div>
        </form>
    </div>
</div>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<div class="table-responsive">
    <table class="table table-bordered table-hover align-middle shadow-sm" id="reservationTable">
        <thead class="table-light">
            <tr>
                <th>Instructor</th>
                <th>Classroom</th>
                <th>Start</th>
                <th>End</th>
                <th>Status</th>
                <th>Note</th>
                <th>Flags</th>
                <th style="width: 220px;">Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var r in filtered)
        {
            var rowClass = r.IsConflicting ? "table-danger" : r.IsHoliday ? "table-warning" : "";
            <tr class="@rowClass" id="row-@r.Id">
                <td>@r.InstructorName</td>
                <td>@r.ClassroomName</td>
                <td>@r.StartTime.ToString("dd.MM.yyyy HH:mm")</td>
                <td>@r.EndTime.ToString("dd.MM.yyyy HH:mm")</td>
                <td class="status">
                    <span class="badge @(r.Status == "Approved" ? "bg-success" : r.Status == "Pending" ? "bg-warning text-dark" : "bg-danger")">
                        @r.Status
                    </span>
                </td>
                <td>@r.Note</td>
                <td>
                    @if (r.IsHoliday)
                    {
                        <span class="badge bg-warning text-dark me-1">Holiday</span>
                    }
                    @if (r.IsConflicting)
                    {
                        <span class="badge bg-danger">Conflict</span>
                    }
                </td>
                <td>
                    <div class="d-flex flex-wrap gap-1">
                        <button data-id="@r.Id" data-action="Approve" class="btn btn-outline-success btn-sm btn-action"
                                @(r.IsConflicting || r.IsHoliday ? "disabled" : null)>
                            <i class="bi bi-check-lg"></i>
                        </button>
                        <button data-id="@r.Id" data-action="Reject" class="btn btn-outline-danger btn-sm btn-action">
                            <i class="bi bi-x-lg"></i>
                        </button>
                        <button data-id="@r.Id" data-action="Delete" class="btn btn-outline-dark btn-sm btn-action">
                            <i class="bi bi-trash3"></i>
                        </button>
                        <a asp-page="/Admin/EditReservation" asp-route-id="@r.Id" class="btn btn-outline-secondary btn-sm">
                            <i class="bi bi-pencil"></i>
                        </a>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

@section Scripts {
<script>
    document.querySelectorAll('.btn-action').forEach(btn => {
        btn.addEventListener('click', async function () {
            const id = this.dataset.id;
            const action = this.dataset.action;
            const token = document.getElementById('__RequestVerificationToken').value;

            const response = await fetch(`?handler=${action}&id=${id}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token
                }
            });

            if (response.ok) {
                const selectedStatus = new URLSearchParams(window.location.search).get("status") || "All";
                if (action === 'Delete') {
                    document.getElementById(`row-${id}`).remove();
                } else {
                    if (selectedStatus !== "All") {
                        document.getElementById(`row-${id}`).remove();
                    } else {
                        const statusCell = document.querySelector(`#row-${id} .status`);
                        if (statusCell)
                            statusCell.innerHTML = `<span class="badge ${action === 'Approve' ? 'bg-success' : 'bg-danger'}">${action === 'Approve' ? 'Approved' : 'Rejected'}</span>`;
                    }
                }
            } else {
                alert(`Failed to ${action} reservation.`);
            }
        });
    });
</script>
}
