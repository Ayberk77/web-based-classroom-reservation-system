@page
@model CalendarModel
@{
    ViewData["Title"] = "Reservation Calendar";
    Layout = "_Layout";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

<h1 class="mt-4 mb-4">
    <i class="bi bi-calendar3-event me-2"></i>My Reservation Calendar
</h1>

<div id="calendar" class="mb-5 shadow-sm border rounded"></div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                firstDay: 1,
                contentHeight: 'auto',
                dayMaxEventRows: true,
                eventDisplay: 'block',
                eventTimeFormat: {
                    hour: 'numeric',
                    minute: '2-digit',
                    hour12: false
                },
                eventContent: function (info) {
                    const start = new Date(info.event.start);
                    const end = new Date(info.event.end);

                    const formatTime = (date) => {
                        return date.getHours().toString().padStart(2, '0') + ':' +
                               date.getMinutes().toString().padStart(2, '0');
                    };

                    const timeRange = formatTime(start) + ' - ' + formatTime(end);

                    return {
                        html: `
                            <div style="display:flex; flex-direction:column; justify-content:center; height:100%; font-size:0.9em; line-height:1.2;">
                                <div><strong>${timeRange}</strong></div>
                                <div>${info.event.title}</div>
                                <div>${info.event.extendedProps.description}</div>
                            </div>
                        `
                    };
                },

                events: [
                    @foreach (var r in Model.Reservations)
                    {
                        <text>
                        {
                            title: '@r.ClassroomName',
                            start: '@r.StartTime.ToString("s")',
                            end: '@r.EndTime.ToString("s")',
                            backgroundColor: '@(r.Status == "Approved" ? "#198754" : r.Status == "Pending" ? "#ffc107" : "#dc3545")',
                            description: '@r.Status'
                        },
                        </text>
                    }
                ],

                datesSet: function () {
                    const weekRows = document.querySelectorAll('.fc-daygrid-body tr');
                    weekRows.forEach(row => {
                        row.style.cursor = 'pointer';
                        row.addEventListener('click', () => {
                            const firstCell = row.querySelector('[data-date]');
                            if (!firstCell) return;
                            const mondayDate = firstCell.getAttribute('data-date');
                            window.location.href = `/Instructor/WeekView?week=${mondayDate}`;
                        });
                    });
                }
            });

            calendar.render();
        });
    </script>
}
