@page
@model CalendarModel
@{
    ViewData["Title"] = "Reservation Calendar";
    Layout = "_Layout";
}

<h1 class="mt-4">My Reservation Calendar</h1>
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

<div id="calendar"></div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                eventTimeFormat: {
                    hour: 'numeric',
                    minute: '2-digit',
                    hour12: false
                },
                eventDisplay: 'block',
                eventContent: function (info) {
                    const start = new Date(info.event.start);
                    const end = new Date(info.event.end);

                    const formatTime = (date) => {
                        return date.getHours().toString().padStart(2, '0') + ':' +
                            date.getMinutes().toString().padStart(2, '0');
                    };

                    const timeRange = formatTime(start) + ' - ' + formatTime(end);

                    return {
                        html: `
                            <div style="display:flex; flex-direction:column; justify-content:center; height:100%; font-size:0.9em; line-height:1.2;">
                                <div><strong>${timeRange}</strong></div>
                                <div>${info.event.title}</div>
                                <div>${info.event.extendedProps.description}</div>
                            </div>
                        `
                    };
                },


                events: [
                    @foreach (var r in Model.Reservations)
                    {
                        <text>
                        {
                            title: '@r.ClassroomName',
                            start: '@r.StartTime.ToString("s")',
                            end: '@r.EndTime.ToString("s")',
                            backgroundColor: '@(r.Status == "Approved" ? "green" : r.Status == "Pending" ? "orange" : "red")',
                            description: '@r.Status'
                        },
                        </text>

                    }
                ]

            });
            calendar.render();
            setTimeout(() => {
                const weekRows = document.querySelectorAll('.fc-daygrid-body tr');
                weekRows.forEach(row => {
                    row.style.cursor = 'pointer';
                    row.addEventListener('click', () => {
                        const firstCell = row.querySelector('[data-date]');
                        if (!firstCell) return;
                        const mondayDate = firstCell.getAttribute('data-date');
                        window.location.href = `/Instructor/WeekView?week=${mondayDate}`;
                    });
                });
            }, 10);
        });
    </script>
}